// Generated by Dagger (https://dagger.dev).
package com.etu.bookcrossing.worker;

import com.etu.bookcrossing.worker.seeders.impl.BookSeeder;
import com.etu.bookcrossing.worker.seeders.impl.UserSeeder;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class Seeders_Factory implements Factory<Seeders> {
  private final Provider<BookSeeder> bookSeederProvider;

  private final Provider<UserSeeder> userSeederProvider;

  public Seeders_Factory(Provider<BookSeeder> bookSeederProvider,
      Provider<UserSeeder> userSeederProvider) {
    this.bookSeederProvider = bookSeederProvider;
    this.userSeederProvider = userSeederProvider;
  }

  @Override
  public Seeders get() {
    return newInstance(bookSeederProvider.get(), userSeederProvider.get());
  }

  public static Seeders_Factory create(Provider<BookSeeder> bookSeederProvider,
      Provider<UserSeeder> userSeederProvider) {
    return new Seeders_Factory(bookSeederProvider, userSeederProvider);
  }

  public static Seeders newInstance(BookSeeder bookSeeder, UserSeeder userSeeder) {
    return new Seeders(bookSeeder, userSeeder);
  }
}
